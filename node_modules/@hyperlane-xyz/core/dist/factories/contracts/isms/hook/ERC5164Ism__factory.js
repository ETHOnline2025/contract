/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_executor",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "messageId",
                type: "bytes32",
            },
        ],
        name: "ReceivedMessage",
        type: "event",
    },
    {
        inputs: [],
        name: "VERIFIED_MASK_INDEX",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "authorizedHook",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "executor",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "moduleType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_hook",
                type: "bytes32",
            },
        ],
        name: "setAuthorizedHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "verifiedMessages",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "messageId",
                type: "bytes32",
            },
        ],
        name: "verifyMessageId",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b50604051610c22380380610c2283398101604081905261002f9161009b565b6001600160a01b0381163b61008a5760405162461bcd60e51b815260206004820152601c60248201527f4552433531363449736d3a20696e76616c6964206578656375746f7200000000604482015260640160405180910390fd5b6001600160a01b03166080526100cb565b6000602082840312156100ad57600080fd5b81516001600160a01b03811681146100c457600080fd5b9392505050565b608051610b356100ed6000396000818161014601526103f40152610b356000f3fe60806040526004361061007b5760003560e01c8063c0762af51161004e578063c0762af51461011e578063c34c08e514610134578063f6a1b6061461018d578063f7e83aee146101a057600080fd5b8063273dca2f146100805780633cf7f1d4146100a85780634c89ca95146100d55780636465e69f146100f7575b600080fd5b34801561008c57600080fd5b5061009560ff81565b6040519081526020015b60405180910390f35b3480156100b457600080fd5b506100956100c336600461085d565b60016020526000908152604090205481565b3480156100e157600080fd5b506100f56100f036600461085d565b6101d0565b005b34801561010357600080fd5b5061010c600681565b60405160ff909116815260200161009f565b34801561012a57600080fd5b5061009560025481565b34801561014057600080fd5b506101687f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009f565b6100f561019b36600461085d565b6103f2565b3480156101ac57600080fd5b506101c06101bb3660046108bf565b6105bf565b604051901515815260200161009f565b600054610100900460ff16158080156101f05750600054600160ff909116105b8061020a5750303b15801561020a575060005460ff166001145b61029b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156102f957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b81610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f696e76616c696420617574686f72697a656420686f6f6b0000000000000000006064820152608401610292565b600282905580156103ee57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146104b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f73656e646572206973206e6f742074686520686f6f6b000000000000000000006064820152608401610292565b6104c360ff6002610a7a565b3410610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f41627374726163744d6573736167654964417574686f72697a656449736d3a2060448201527f6d73672e76616c7565206d757374206265206c657373207468616e20325e323560648201527f3500000000000000000000000000000000000000000000000000000000000000608482015260a401610292565b6105823460ff6106b4565b60008281526001602052604080822092909255905182917f29fd736a4b56a1d1de2fe7a405923426855af099817098f9cf8ba7e2a6ef9f6491a250565b60008061060184848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106c192505050565b6000818152600160208190526040822054929350909160ff1c14905080156106aa576000828152600160205260409020547f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1680156106a85760008381526001602052604081208054839290610678908490610a86565b909155506106a890508161068c88886106cc565b73ffffffffffffffffffffffffffffffffffffffff16906106e5565b505b9695505050505050565b6001811b82175b92915050565b805160209091012090565b60006106de6106db8484610844565b90565b9392505050565b8047101561074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610292565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d80600081146107a9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ae565b606091505b505090508061083f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610292565b505050565b6000610854604d602d8486610a99565b6106de91610ac3565b60006020828403121561086f57600080fd5b5035919050565b60008083601f84011261088857600080fd5b50813567ffffffffffffffff8111156108a057600080fd5b6020830191508360208285010111156108b857600080fd5b9250929050565b600080600080604085870312156108d557600080fd5b843567ffffffffffffffff808211156108ed57600080fd5b6108f988838901610876565b9096509450602087013591508082111561091257600080fd5b5061091f87828801610876565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b808511156109b357817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156109995761099961092b565b808516156109a657918102915b93841c939080029061095f565b509250929050565b6000826109ca575060016106bb565b816109d7575060006106bb565b81600181146109ed57600281146109f757610a13565b60019150506106bb565b60ff841115610a0857610a0861092b565b50506001821b6106bb565b5060208310610133831016604e8410600b8410161715610a36575081810a6106bb565b610a40838361095a565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610a7257610a7261092b565b029392505050565b60006106de83836109bb565b818103818111156106bb576106bb61092b565b60008085851115610aa957600080fd5b83861115610ab657600080fd5b5050820193919092039150565b803560208310156106bb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220f3390ba57499fe613b02e88abf39d06c3c90519b1b24121290558cfcb9d4356064736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
export class ERC5164Ism__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_executor, overrides) {
        return super.deploy(_executor, overrides || {});
    }
    getDeployTransaction(_executor, overrides) {
        return super.getDeployTransaction(_executor, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=ERC5164Ism__factory.js.map