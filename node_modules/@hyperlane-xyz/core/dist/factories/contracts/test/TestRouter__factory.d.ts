import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestRouter, TestRouterInterface } from "../../../contracts/test/TestRouter.js";
type TestRouterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestRouter__factory extends ContractFactory {
    constructor(...args: TestRouterConstructorParams);
    deploy(_mailbox: string, overrides?: Overrides & {
        from?: string;
    }): Promise<TestRouter>;
    getDeployTransaction(_mailbox: string, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestRouter;
    connect(signer: Signer): TestRouter__factory;
    static readonly bytecode = "0x60c06040523480156200001157600080fd5b5060405162001e9638038062001e96833981016040819052620000349162000174565b8080806001600160a01b0381163b620000935760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001049190620001a6565b63ffffffff1660a052620001183362000122565b50505050620001ce565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200018757600080fd5b81516001600160a01b03811681146200019f57600080fd5b9392505050565b600060208284031215620001b957600080fd5b815163ffffffff811681146200019f57600080fd5b60805160a051611c9462000202600039600061032a0152600081816103be015281816108a101526111950152611c946000f3fe60806040526004361061015f5760003560e01c80637249609f116100c0578063d5438eae11610074578063e9198bf911610059578063e9198bf91461040d578063efae508a1461042d578063f2fde38b1461044d57600080fd5b8063d5438eae146103ac578063de523cf3146103e057600080fd5b80638d3638f4116100a55780638d3638f4146103185780638da5cb5b14610361578063b49c53a71461038c57600080fd5b80637249609f146102b35780637f5a7c7b146102c657600080fd5b8063440df4f41161011757806356d5d475116100fc57806356d5d4751461026b578063715018a61461027e57806371a15b381461029357600080fd5b8063440df4f414610229578063485cc9551461024b57600080fd5b80632e6a9e4b116101485780632e6a9e4b146101b95780632ead72f6146101e95780633dfd38731461020957600080fd5b80630e72cc0614610164578063133b79a914610186575b600080fd5b34801561017057600080fd5b5061018461017f3660046116ba565b61046d565b005b34801561019257600080fd5b506101a66101a13660046116e9565b610588565b6040519081526020015b60405180910390f35b3480156101c557600080fd5b506101d96101d4366004611704565b610599565b60405190151581526020016101b0565b3480156101f557600080fd5b506101a66102043660046116e9565b6105ac565b34801561021557600080fd5b506101846102243660046116ba565b6105cb565b34801561023557600080fd5b5061023e6106e1565b6040516101b0919061172e565b34801561025757600080fd5b50610184610266366004611778565b6106f2565b6101846102793660046117ab565b610889565b34801561028a57600080fd5b506101846109f1565b34801561029f57600080fd5b506101846102ae366004611877565b610a05565b6101846102c13660046118e8565b610a60565b3480156102d257600080fd5b506065546102f39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b0565b34801561032457600080fd5b5061034c7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101b0565b34801561036d57600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166102f3565b34801561039857600080fd5b506101846103a7366004611704565b610a6a565b3480156103b857600080fd5b506102f37f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ec57600080fd5b506066546102f39073ffffffffffffffffffffffffffffffffffffffff1681565b34801561041957600080fd5b506101846104283660046119c8565b610a80565b34801561043957600080fd5b506101846104483660046116e9565b610b5f565b34801561045957600080fd5b506101846104683660046116ba565b610b73565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806104a7575073ffffffffffffffffffffffffffffffffffffffff8116155b610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610540610c27565b50606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600061059382610ca8565b92915050565b60006105a58383610d0e565b9392505050565b6000806105c3609763ffffffff80861690610d2216565b949350505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610605575073ffffffffffffffffffffffffffffffffffffffff8116155b610691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e6700000000000000000000000000000000000000000000000000606482015260840161052f565b610699610c27565b50606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606106ed6097610d3b565b905090565b600054610100900460ff16158080156107125750600054600160ff909116105b8061072c5750303b15801561072c575060005460ff166001145b6107b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161052f565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561081657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610821838333610df6565b801561088457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f60448201527f7800000000000000000000000000000000000000000000000000000000000000606482015260840161052f565b600061095985610ca8565b90508381146109ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201527f656e646572000000000000000000000000000000000000000000000000000000606482015260840161052f565b5050505050565b6109f9610c27565b610a036000610eac565b565b610a0d610c27565b8060005b81811015610a5a57610a48848483818110610a2e57610a2e611a34565b9050602002016020810190610a4391906116e9565b610f23565b610a53600182611a92565b9050610a11565b50505050565b6108848282610f78565b610a72610c27565b610a7c8282610fb8565b5050565b610a88610c27565b828114610af1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216c656e67746800000000000000000000000000000000000000000000000000604482015260640161052f565b8260005b81811015610b5757610b45868683818110610b1257610b12611a34565b9050602002016020810190610b2791906116e9565b858584818110610b3957610b39611a34565b90506020020135610fb8565b610b50600182611a92565b9050610af5565b505050505050565b610b67610c27565b610b7081610f23565b50565b610b7b610c27565b73ffffffffffffffffffffffffffffffffffffffff8116610c1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161052f565b610b7081610eac565b60335473ffffffffffffffffffffffffffffffffffffffff163314610a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052f565b60008080610cc0609763ffffffff80871690610d2216565b9150915081610cce85610fce565b90610d06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f9190611b13565b509392505050565b600081610d1a846105ac565b149392505050565b600080610d2f8484611005565b915091505b9250929050565b60606000610d488361103f565b9050805167ffffffffffffffff811115610d6457610d646118b9565b604051908082528060200260200182016040528015610d8d578160200160208202803683370190505b50915060005b8151811015610def57818181518110610dae57610dae611a34565b6020026020010151838281518110610dc857610dc8611a34565b63ffffffff9092166020928302919091019091015280610de781611b26565b915050610d93565b5050919050565b600054610100900460ff16610e8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161052f565b610e956110da565b610e9e836105cb565b610ea78261046d565b610884815b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f37609763ffffffff8084169061117916565b610f4082610fce565b90610a7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f9190611b13565b60006105a583348460405180602001604052806000815250606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611185565b610a7c609763ffffffff80851690849061124316565b6060610fdf8263ffffffff1661124e565b604051602001610fef9190611b5e565b6040516020818303038152906040529050919050565b600081815260028301602052604081205481908061103457611027858561130c565b925060009150610d349050565b600192509050610d34565b6060600061104c83611318565b90508067ffffffffffffffff811115611067576110676118b9565b604051908082528060200260200182016040528015611090578160200160208202803683370190505b50915060005b81811015610def576110a88482611323565b60001c8382815181106110bd576110bd611a34565b6020908102919091010152806110d281611b26565b915050611096565b600054610100900460ff16611171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161052f565b610a0361132f565b60006105a583836113cf565b60008061119187610ca8565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166310b83dc08789848989896040518763ffffffff1660e01b81526004016111f5959493929190611ba3565b60206040518083038185885af1158015611213573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112389190611c03565b979650505050505050565b610a5a8383836113ec565b6060600061125b83611409565b600101905060008167ffffffffffffffff81111561127b5761127b6118b9565b6040519080825280601f01601f1916602001820160405280156112a5576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846112af57509392505050565b60006105a583836114eb565b600061059382611503565b60006105a5838361150d565b600054610100900460ff166113c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161052f565b610a0333610eac565b600081815260028301602052604081208190556105a58383611537565b600082815260028401602052604081208290556105c38484611543565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611452577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061147e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061149c57662386f26fc10000830492506010015b6305f5e10083106114b4576305f5e100830492506008015b61271083106114c857612710830492506004015b606483106114da576064830492506002015b600a83106105935760010192915050565b600081815260018301602052604081205415156105a5565b6000610593825490565b600082600001828154811061152457611524611a34565b9060005260206000200154905092915050565b60006105a5838361154f565b60006105a58383611642565b60008181526001830160205260408120548015611638576000611573600183611c1c565b855490915060009061158790600190611c1c565b90508181146115ec5760008660000182815481106115a7576115a7611a34565b90600052602060002001549050808760000184815481106115ca576115ca611a34565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806115fd576115fd611c2f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610593565b6000915050610593565b600081815260018301602052604081205461168957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610593565b506000610593565b803573ffffffffffffffffffffffffffffffffffffffff811681146116b557600080fd5b919050565b6000602082840312156116cc57600080fd5b6105a582611691565b803563ffffffff811681146116b557600080fd5b6000602082840312156116fb57600080fd5b6105a5826116d5565b6000806040838503121561171757600080fd5b611720836116d5565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561176c57835163ffffffff168352928401929184019160010161174a565b50909695505050505050565b6000806040838503121561178b57600080fd5b61179483611691565b91506117a260208401611691565b90509250929050565b600080600080606085870312156117c157600080fd5b6117ca856116d5565b935060208501359250604085013567ffffffffffffffff808211156117ee57600080fd5b818701915087601f83011261180257600080fd5b81358181111561181157600080fd5b88602082850101111561182357600080fd5b95989497505060200194505050565b60008083601f84011261184457600080fd5b50813567ffffffffffffffff81111561185c57600080fd5b6020830191508360208260051b8501011115610d3457600080fd5b6000806020838503121561188a57600080fd5b823567ffffffffffffffff8111156118a157600080fd5b6118ad85828601611832565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156118fb57600080fd5b611904836116d5565b9150602083013567ffffffffffffffff8082111561192157600080fd5b818501915085601f83011261193557600080fd5b813581811115611947576119476118b9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561198d5761198d6118b9565b816040528281528860208487010111156119a657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080604085870312156119de57600080fd5b843567ffffffffffffffff808211156119f657600080fd5b611a0288838901611832565b90965094506020870135915080821115611a1b57600080fd5b50611a2887828801611832565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561059357610593611a63565b60005b83811015611ac0578181015183820152602001611aa8565b50506000910152565b60008151808452611ae1816020860160208601611aa5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006105a56020830184611ac9565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b5757611b57611a63565b5060010190565b7f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a2000815260008251611b9681601f850160208701611aa5565b91909101601f0192915050565b63ffffffff8616815284602082015260a060408201526000611bc860a0830186611ac9565b8281036060840152611bda8186611ac9565b91505073ffffffffffffffffffffffffffffffffffffffff831660808301529695505050505050565b600060208284031215611c1557600080fd5b5051919050565b8181038181111561059357610593611a63565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212205472b42112faf84cf2cf240052b9019ed1b4c26c2f5388eb358979743ab920a364736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_mailbox";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "InitializeOverload";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destination";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_msg";
            readonly type: "bytes";
        }];
        readonly name: "dispatch";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "domains";
        readonly outputs: readonly [{
            readonly internalType: "uint32[]";
            readonly name: "";
            readonly type: "uint32[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_router";
            readonly type: "bytes32";
        }];
        readonly name: "enrollRemoteRouter";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32[]";
            readonly name: "_domains";
            readonly type: "uint32[]";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "_addresses";
            readonly type: "bytes32[]";
        }];
        readonly name: "enrollRemoteRouters";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_origin";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_sender";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "handle";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "hook";
        readonly outputs: readonly [{
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_interchainSecurityModule";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "interchainSecurityModule";
        readonly outputs: readonly [{
            readonly internalType: "contract IInterchainSecurityModule";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_potentialRemoteRouter";
            readonly type: "bytes32";
        }];
        readonly name: "isRemoteRouter";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "localDomain";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "mailbox";
        readonly outputs: readonly [{
            readonly internalType: "contract IMailbox";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }];
        readonly name: "mustHaveRemoteRouter";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }];
        readonly name: "routers";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "setHook";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_module";
            readonly type: "address";
        }];
        readonly name: "setInterchainSecurityModule";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }];
        readonly name: "unenrollRemoteRouter";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32[]";
            readonly name: "_domains";
            readonly type: "uint32[]";
        }];
        readonly name: "unenrollRemoteRouters";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): TestRouterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestRouter;
}
export {};
//# sourceMappingURL=TestRouter__factory.d.ts.map