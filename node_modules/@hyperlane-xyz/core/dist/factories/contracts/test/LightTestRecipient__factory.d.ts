import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LightTestRecipient, LightTestRecipientInterface } from "../../../contracts/test/LightTestRecipient.js";
type LightTestRecipientConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class LightTestRecipient__factory extends ContractFactory {
    constructor(...args: LightTestRecipientConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<LightTestRecipient>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): LightTestRecipient;
    connect(signer: Signer): LightTestRecipient__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109b68061007e6000396000f3fe6080604052600436106100bb5760003560e01c8063715018a611610074578063de523cf31161004e578063de523cf3146101ec578063f07c1f4714610219578063f2fde38b1461023957600080fd5b8063715018a6146101975780638da5cb5b146101ac578063a4982fde146101d757600080fd5b80632113522a116100a55780632113522a1461010d578063256fec881461015f57806356d5d4751461018357600080fd5b80626e75ec146100c05780630e72cc06146100eb575b600080fd5b3480156100cc57600080fd5b506100d5610259565b6040516100e291906105f6565b60405180910390f35b3480156100f757600080fd5b5061010b610106366004610610565b6102e7565b005b34801561011957600080fd5b5060045461013a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e2565b34801561016b57600080fd5b5061017560025481565b6040519081526020016100e2565b61010b61019136600461068f565b50505050565b3480156101a357600080fd5b5061010b610336565b3480156101b857600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661013a565b3480156101e357600080fd5b506100d561034a565b3480156101f857600080fd5b5060015461013a9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561022557600080fd5b5061010b6102343660046106f4565b610357565b34801561024557600080fd5b5061010b610254366004610610565b6103e0565b6003805461026690610740565b80601f016020809104026020016040519081016040528092919081815260200182805461029290610740565b80156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b505050505081565b6102ef61049c565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61033e61049c565b610348600061051d565b565b6005805461026690610740565b3373ffffffffffffffffffffffffffffffffffffffff167f97d8367a1f39eb9e97f262fafbb05925c0bcfe120aaad7b9737cae34f749c2068484846040516103a193929190610793565b60405180910390a2600480547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556005610191828483610865565b6103e861049c565b73ffffffffffffffffffffffffffffffffffffffff8116610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104998161051d565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610487565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000815180845260005b818110156105b85760208185018101518683018201520161059c565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006106096020830184610592565b9392505050565b60006020828403121561062257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461060957600080fd5b60008083601f84011261065857600080fd5b50813567ffffffffffffffff81111561067057600080fd5b60208301915083602082850101111561068857600080fd5b9250929050565b600080600080606085870312156106a557600080fd5b843563ffffffff811681146106b957600080fd5b935060208501359250604085013567ffffffffffffffff8111156106dc57600080fd5b6106e887828801610646565b95989497509550505050565b60008060006040848603121561070957600080fd5b83359250602084013567ffffffffffffffff81111561072757600080fd5b61073386828701610646565b9497909650939450505050565b600181811c9082168061075457607f821691505b60208210810361078d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f82111561086057600081815260208120601f850160051c8101602086101561083d5750805b601f850160051c820191505b8181101561085c57828155600101610849565b5050505b505050565b67ffffffffffffffff83111561087d5761087d6107e7565b6108918361088b8354610740565b83610816565b6000601f8411600181146108e357600085156108ad5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610979565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156109325786850135825560209485019460019092019101610912565b508682101561096d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea2646970667358221220cc38925e673fa32cf79e82f274300be6751577346a26cdad227a35dd87ed8acb64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "message";
            readonly type: "string";
        }];
        readonly name: "ReceivedCall";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "origin";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "sender";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "message";
            readonly type: "string";
        }];
        readonly name: "ReceivedMessage";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "message";
            readonly type: "string";
        }];
        readonly name: "fooBar";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_origin";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_sender";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "handle";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "interchainSecurityModule";
        readonly outputs: readonly [{
            readonly internalType: "contract IInterchainSecurityModule";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastCallMessage";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastCaller";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastData";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastSender";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_ism";
            readonly type: "address";
        }];
        readonly name: "setInterchainSecurityModule";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): LightTestRecipientInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): LightTestRecipient;
}
export {};
//# sourceMappingURL=LightTestRecipient__factory.d.ts.map