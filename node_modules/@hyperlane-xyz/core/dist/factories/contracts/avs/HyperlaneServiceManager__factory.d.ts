import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HyperlaneServiceManager, HyperlaneServiceManagerInterface } from "../../../contracts/avs/HyperlaneServiceManager.js";
type HyperlaneServiceManagerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class HyperlaneServiceManager__factory extends ContractFactory {
    constructor(...args: HyperlaneServiceManagerConstructorParams);
    deploy(_avsDirectory: string, _stakeRegistry: string, _paymentCoordinator: string, _delegationManager: string, overrides?: Overrides & {
        from?: string;
    }): Promise<HyperlaneServiceManager>;
    getDeployTransaction(_avsDirectory: string, _stakeRegistry: string, _paymentCoordinator: string, _delegationManager: string, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): HyperlaneServiceManager;
    connect(signer: Signer): HyperlaneServiceManager__factory;
    static readonly bytecode = "0x60e06040523480156200001157600080fd5b5060405162002fc938038062002fc9833981016040819052620000349162000086565b6001600160a01b0393841660a052918316608052606580546001600160a01b0319169184169190911790551660c052620000e3565b80516001600160a01b03811681146200008157600080fd5b919050565b600080600080608085870312156200009d57600080fd5b620000a88562000069565b9350620000b86020860162000069565b9250620000c86040860162000069565b9150620000d86060860162000069565b905092959194509250565b60805160a05160c051612e85620001446000396000610f8b01526000818161026d015281816118ed015281816119f70152611ad5015260008181610221015281816107f20152818161098201528181610dda0152611c980152612e856000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80638df971c8116100e3578063ab87d8231161008c578063c4d66de811610066578063c4d66de814610380578063e481af9d14610393578063f2fde38b1461039b57600080fd5b8063ab87d82314610347578063ad444b7c1461035a578063bb90a3031461036d57600080fd5b8063a364f4da116100bd578063a364f4da1461030e578063a98fb35514610321578063aabc24961461033457600080fd5b80638df971c8146102d55780639926ee7d146102e85780639e30f45a146102fb57600080fd5b80635d13ff7e11610145578063715018a61161011f578063715018a61461028f5780637df7561d146102975780638da5cb5b146102b757600080fd5b80635d13ff7e14610209578063683048351461021c5780636b3aa72e1461026857600080fd5b806342b5c0101161017657806342b5c010146101d05780634cc41e91146101e35780634e339a21146101f657600080fd5b806333cfb7b71461019257806338c8ee64146101bb575b600080fd5b6101a56101a0366004612252565b6103ae565b6040516101b2919061226f565b60405180910390f35b6101ce6101c9366004612252565b6103bf565b005b6101ce6101de3660046122c9565b610510565b6101ce6101f136600461244f565b610526565b6101ce610204366004612252565b610566565b6101ce6102173660046124ee565b610573565b6102437f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b2565b6102437f000000000000000000000000000000000000000000000000000000000000000081565b6101ce61057d565b6102aa6102a536600461257d565b610591565b6040516101b291906125e5565b60335473ffffffffffffffffffffffffffffffffffffffff16610243565b6101ce6102e3366004612252565b6105db565b6101ce6102f63660046126ce565b6107da565b6101ce610309366004612252565b6108cf565b6101ce61031c366004612252565b61096a565b6101ce61032f366004612779565b610a5e565b6101ce610342366004612252565b610a6f565b6101ce610355366004612252565b610abe565b6101ce61036836600461244f565b610b0d565b6101a561037b366004612252565b610b4d565b6101ce61038e366004612252565b610b7e565b6101a5610d11565b6101ce6103a9366004612252565b610d20565b60606103b982610dd4565b92915050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526099602052604081208291906103f190336111b7565b50905080610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f48797065726c616e65536572766963654d616e616765723a204f70657261746f60448201527f72206e6f7420656e726f6c6c656420696e206368616c6c656e6765720000000060648201526084015b60405180910390fd5b6098546040517f38c8ee6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152909116906338c8ee6490602401600060405180830381600087803b1580156104f357600080fd5b505af1158015610507573d6000803e3d6000fd5b50505050505050565b610518611212565b6105228282611293565b5050565b60005b815181101561052257610554828281518110610547576105476127c2565b60200260200101516108cf565b8061055e81612820565b915050610529565b6105703382611568565b50565b6105703382611782565b610585611212565b61058f60006117c8565b565b604080518082019091526000808252602082015273ffffffffffffffffffffffffffffffffffffffff831660009081526099602052604090206105d4908361183f565b9392505050565b33600090815260996020526040812081906105f690846111b7565b915091508180156106195750600181516002811115610617576106176125b6565b145b6106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f48797065726c616e65536572766963654d616e616765723a206368616c6c656e60448201527f6765722069736e277420656e726f6c6c65640000000000000000000000000000606482015260840161047d565b6107068360405180604001604052806002808111156106c6576106c66125b6565b81527effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4316602091820152336000908152609990915260409020919061187b565b507f9f241e41144c054480ac978d65c684ede531a08797b3e9b48c1179e2546ba70b3384438673ffffffffffffffffffffffffffffffffffffffff166348a345486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a9190612858565b6040805173ffffffffffffffffffffffffffffffffffffffff958616815294909316602085015291830152606082015260800160405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146108c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4543445341536572766963654d616e61676572426173652e6f6e6c795374616b60448201527f6552656769737472793a2063616c6c6572206973206e6f74207468652073746160648201527f6b65526567697374727900000000000000000000000000000000000000000000608482015260a40161047d565b61052282826118b0565b610910816040518060400160405280600160028111156108f1576108f16125b6565b815260006020918201819052338152609990915260409020919061187b565b61091957600080fd5b6040805133815273ffffffffffffffffffffffffffffffffffffffff831660208201527faca60599b023994fdac50ab68ba3245af232ff894776242253c35bf9334c6c19910160405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4543445341536572766963654d616e61676572426173652e6f6e6c795374616b60448201527f6552656769737472793a2063616c6c6572206973206e6f74207468652073746160648201527f6b65526567697374727900000000000000000000000000000000000000000000608482015260a40161047d565b6105708161199b565b610a66611212565b61057081611a98565b610a77611212565b609880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610ac6611212565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005b815181101561052257610b3b828281518110610b2e57610b2e6127c2565b60200260200101516105db565b80610b4581612820565b915050610b10565b73ffffffffffffffffffffffffffffffffffffffff811660009081526099602052604090206060906103b990611b3f565b600054610100900460ff1615808015610b9e5750600054600160ff909116105b80610bb85750303b158015610bb8575060005460ff166001145b610c44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161047d565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610ca257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610cab82611bfb565b801561052257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6060610d1b611c92565b905090565b610d28611212565b73ffffffffffffffffffffffffffffffffffffffff8116610dcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161047d565b610570816117c8565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631703a0186040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e43573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e89919081019061288b565b80515190915060008167ffffffffffffffff811115610eaa57610eaa61233e565b604051908082528060200260200182016040528015610ed3578160200160208202803683370190505b50905060005b82811015610f4a578351805182908110610ef557610ef56127c2565b602002602001015160000151828281518110610f1357610f136127c2565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610f4281612820565b915050610ed9565b506040517f9004134700000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690639004134790610fc29089908690600401612988565b600060405180830381865afa158015610fdf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261102591908101906129f0565b905060008367ffffffffffffffff8111156110425761104261233e565b60405190808252806020026020018201604052801561106b578160200160208202803683370190505b5090506000805b858110156110bc57600084828151811061108e5761108e6127c2565b602002602001015111156110aa57816110a681612820565b9250505b806110b481612820565b915050611072565b5060008167ffffffffffffffff8111156110d8576110d861233e565b604051908082528060200260200182016040528015611101578160200160208202803683370190505b50905060005b868110156111aa576000858281518110611123576111236127c2565b6020026020010151111561119857838181518110611143576111436127c2565b602002602001015182828151811061115d5761115d6127c2565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b806111a281612820565b915050611107565b5098975050505050505050565b60006111d3604080518082019091526000808252602082015290565b6000806111f68673ffffffffffffffffffffffffffffffffffffffff8716611e12565b915091508161120482611e4c565b9350935050505b9250929050565b60335473ffffffffffffffffffffffffffffffffffffffff16331461058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047d565b60005b818110156114d9578282828181106112b0576112b06127c2565b90506020028101906112c29190612a76565b6112d3906040810190602001612252565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330868686818110611302576113026127c2565b90506020028101906113149190612a76565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff9485166004820152939092166024840152013560448201526064016020604051808303816000875af1158015611390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b49190612ac4565b508282828181106113c7576113c76127c2565b90506020028101906113d99190612a76565b6113ea906040810190602001612252565b60655473ffffffffffffffffffffffffffffffffffffffff9182169163095ea7b3911685858581811061141f5761141f6127c2565b90506020028101906114319190612a76565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff9093166004840152013560248201526044016020604051808303816000875af11580156114a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c89190612ac4565b506114d281612820565b9050611296565b506065546040517f42b5c01000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906342b5c010906115329085908590600401612b76565b600060405180830381600087803b15801561154c57600080fd5b505af1158015611560573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152609960205260408120829190819061159c90846111b7565b915091508180156115bf57506002815160028111156115bd576115bd6125b6565b145b801561166957508273ffffffffffffffffffffffffffffffffffffffff166348a345486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611611573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116359190612858565b81602001517effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff166116659190612ce5565b4310155b6116f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f48797065726c616e65536572766963654d616e616765723a20496e76616c696460448201527f20756e656e726f6c6c6d656e7400000000000000000000000000000000000000606482015260840161047d565b73ffffffffffffffffffffffffffffffffffffffff851660009081526099602052604090206117249084611eea565b506040805173ffffffffffffffffffffffffffffffffffffffff878116825285166020820152438183015290517f242aa6799e048fcfb2fdab034c8d551cfc664668dabb2c328afb2c4b1f580df29181900360600190a15050505050565b60005b81518110156117c3576117b1838383815181106117a4576117a46127c2565b6020026020010151611568565b806117bb81612820565b915050611785565b505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60408051808201909152600080825260208201526105d46118768473ffffffffffffffffffffffffffffffffffffffff8516611f0c565b611e4c565b60006118a873ffffffffffffffffffffffffffffffffffffffff84166118a084611f96565b86919061202d565b949350505050565b6040517f9926ee7d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d906119249085908590600401612d5c565b600060405180830381600087803b15801561193e57600080fd5b505af1158015611952573d6000803e3d6000fd5b505060405173ffffffffffffffffffffffffffffffffffffffff851692507f306b68d1022977e8137039c81b6a888f5873def4cb317543f9405185eecfba0b9150600090a25050565b60006119a682610b4d565b90506119b28282611782565b6040517fa364f4da00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da90602401600060405180830381600087803b158015611a3b57600080fd5b505af1158015611a4f573d6000803e3d6000fd5b505060405173ffffffffffffffffffffffffffffffffffffffff851692507fab853d7336de89b5d6798d81138aa3de232eff62ca542395346484c01a3d76839150600090a25050565b6040517fa98fb35500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a98fb35590611b0a908490600401612db5565b600060405180830381600087803b158015611b2457600080fd5b505af1158015611b38573d6000803e3d6000fd5b5050505050565b60606000611b4c8361204a565b90508067ffffffffffffffff811115611b6757611b6761233e565b604051908082528060200260200182016040528015611b90578160200160208202803683370190505b50915060005b81811015611bf457611ba88482612055565b60001c838281518110611bbd57611bbd6127c2565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280611bec81612820565b915050611b96565b5050919050565b600054610100900460ff16610dcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161047d565b606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631703a0186040518163ffffffff1660e01b8152600401600060405180830381865afa158015611d01573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611d47919081019061288b565b9050600081600001515167ffffffffffffffff811115611d6957611d6961233e565b604051908082528060200260200182016040528015611d92578160200160208202803683370190505b50905060005b825151811015611e0b578251805182908110611db657611db66127c2565b602002602001015160000151828281518110611dd457611dd46127c2565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280611e0381612820565b915050611d98565b5092915050565b6000818152600283016020526040812054819080611e4157611e348585612061565b92506000915061120b9050565b60019250905061120b565b604080518082019091526000808252602082015260408051808201909152600083901a907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169080836002811115611ea657611ea66125b6565b6002811115611eb757611eb76125b6565b8152602001827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525092505050919050565b60006105d48373ffffffffffffffffffffffffffffffffffffffff841661206d565b600081815260028301602052604081205480151580611f305750611f308484612061565b6105d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015260640161047d565b80516000906002811115611fac57611fac6125b6565b60208084015160405161201593920160f89290921b7fff0000000000000000000000000000000000000000000000000000000000000016825260081b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600182015260200190565b6040516020818303038152906040526103b990612dc8565b600082815260028401602052604081208290556118a8848461208a565b60006103b982612096565b60006105d483836120a0565b60006105d483836120ca565b600081815260028301602052604081208190556105d483836120e2565b60006105d483836120ee565b60006103b9825490565b60008260000182815481106120b7576120b76127c2565b9060005260206000200154905092915050565b600081815260018301602052604081205415156105d4565b60006105d4838361213d565b6000818152600183016020526040812054612135575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103b9565b5060006103b9565b60008181526001830160205260408120548015612226576000612161600183612e0d565b855490915060009061217590600190612e0d565b90508181146121da576000866000018281548110612195576121956127c2565b90600052602060002001549050808760000184815481106121b8576121b86127c2565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806121eb576121eb612e20565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103b9565b60009150506103b9565b73ffffffffffffffffffffffffffffffffffffffff8116811461057057600080fd5b60006020828403121561226457600080fd5b81356105d481612230565b6020808252825182820181905260009190848201906040850190845b818110156122bd57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161228b565b50909695505050505050565b600080602083850312156122dc57600080fd5b823567ffffffffffffffff808211156122f457600080fd5b818501915085601f83011261230857600080fd5b81358181111561231757600080fd5b8660208260051b850101111561232c57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156123905761239061233e565b60405290565b6040516020810167ffffffffffffffff811182821017156123905761239061233e565b6040805190810167ffffffffffffffff811182821017156123905761239061233e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156124235761242361233e565b604052919050565b600067ffffffffffffffff8211156124455761244561233e565b5060051b60200190565b6000602080838503121561246257600080fd5b823567ffffffffffffffff81111561247957600080fd5b8301601f8101851361248a57600080fd5b803561249d6124988261242b565b6123dc565b81815260059190911b820183019083810190878311156124bc57600080fd5b928401925b828410156124e35783356124d481612230565b825292840192908401906124c1565b979650505050505050565b6000602080838503121561250157600080fd5b823567ffffffffffffffff81111561251857600080fd5b8301601f8101851361252957600080fd5b80356125376124988261242b565b81815260059190911b8201830190838101908783111561255657600080fd5b928401925b828410156124e357833561256e81612230565b8252928401929084019061255b565b6000806040838503121561259057600080fd5b823561259b81612230565b915060208301356125ab81612230565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8151604082019060038110612623577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b808352507effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084015116602083015292915050565b600067ffffffffffffffff8311156126725761267261233e565b6126a360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016123dc565b90508281528383830111156126b757600080fd5b828260208301376000602084830101529392505050565b600080604083850312156126e157600080fd5b82356126ec81612230565b9150602083013567ffffffffffffffff8082111561270957600080fd5b908401906060828703121561271d57600080fd5b61272561236d565b82358281111561273457600080fd5b83019150601f8201871361274757600080fd5b61275687833560208501612658565b815260208301356020820152604083013560408201528093505050509250929050565b60006020828403121561278b57600080fd5b813567ffffffffffffffff8111156127a257600080fd5b8201601f810184136127b357600080fd5b6118a884823560208401612658565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612851576128516127f1565b5060010190565b60006020828403121561286a57600080fd5b5051919050565b6bffffffffffffffffffffffff8116811461057057600080fd5b6000602080838503121561289e57600080fd5b825167ffffffffffffffff808211156128b657600080fd5b81850191508282870312156128ca57600080fd5b6128d2612396565b8251828111156128e157600080fd5b80840193505086601f8401126128f657600080fd5b825191506129066124988361242b565b82815260069290921b8301840191848101908884111561292557600080fd5b938501935b8385101561297b576040858a0312156129435760008081fd5b61294b6123b9565b855161295681612230565b81528587015161296581612871565b818801528252604094909401939085019061292a565b8252509695505050505050565b60006040820173ffffffffffffffffffffffffffffffffffffffff80861684526020604081860152828651808552606087019150828801945060005b818110156129e25785518516835294830194918301916001016129c4565b509098975050505050505050565b60006020808385031215612a0357600080fd5b825167ffffffffffffffff811115612a1a57600080fd5b8301601f81018513612a2b57600080fd5b8051612a396124988261242b565b81815260059190911b82018301908381019087831115612a5857600080fd5b928401925b828410156124e357835182529284019290840190612a5d565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112612aaa57600080fd5b9190910192915050565b8035612abf81612230565b919050565b600060208284031215612ad657600080fd5b815180151581146105d457600080fd5b8183526000602080850194508260005b85811015612b53578135612b0981612230565b73ffffffffffffffffffffffffffffffffffffffff16875281830135612b2e81612871565b6bffffffffffffffffffffffff16878401526040968701969190910190600101612af6565b509495945050505050565b803567ffffffffffffffff81168114612abf57600080fd5b60208082528181018390526000906040808401600586901b8501820187855b888110156129e2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff618b3603018112612bf657600080fd5b8a0160a08135368390037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112612c2d57600080fd5b8201888101903567ffffffffffffffff811115612c4957600080fd5b8060061b3603821315612c5b57600080fd5b828752612c6b8388018284612ae6565b92505050612c7a888301612ab4565b73ffffffffffffffffffffffffffffffffffffffff168886015281870135878601526060612ca9818401612b5e565b67ffffffffffffffff16908601526080612cc4838201612b5e565b67ffffffffffffffff16950194909452509285019290850190600101612b95565b808201808211156103b9576103b96127f1565b6000815180845260005b81811015612d1e57602081850181015186830182015201612d02565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000825160606040840152612d9460a0840182612cf8565b90506020840151606084015260408401516080840152809150509392505050565b6020815260006105d46020830184612cf8565b80516020808301519190811015612e07577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b818103818111156103b9576103b96127f1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d436fcac1d5fbc52c515d2d076a1546955b8de24589360d85f2b6f327dba013964736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_avsDirectory";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_stakeRegistry";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_paymentCoordinator";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_delegationManager";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "OperatorDeregisteredFromAVS";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IRemoteChallenger";
            readonly name: "challenger";
            readonly type: "address";
        }];
        readonly name: "OperatorEnrolledToChallenger";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IRemoteChallenger";
            readonly name: "challenger";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "unenrollmentStartBlock";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "challengeDelayBlocks";
            readonly type: "uint256";
        }];
        readonly name: "OperatorQueuedUnenrollmentFromChallenger";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "OperatorRegisteredToAVS";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IRemoteChallenger";
            readonly name: "challenger";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "unenrollmentEndBlock";
            readonly type: "uint256";
        }];
        readonly name: "OperatorUnenrolledFromChallenger";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "avsDirectory";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "challenger";
            readonly type: "address";
        }];
        readonly name: "completeUnenrollment";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "_challengers";
            readonly type: "address[]";
        }];
        readonly name: "completeUnenrollment";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "deregisterOperatorFromAVS";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IRemoteChallenger";
            readonly name: "challenger";
            readonly type: "address";
        }];
        readonly name: "enrollIntoChallenger";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IRemoteChallenger[]";
            readonly name: "_challengers";
            readonly type: "address[]";
        }];
        readonly name: "enrollIntoChallengers";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "freezeOperator";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly internalType: "contract IRemoteChallenger";
            readonly name: "_challenger";
            readonly type: "address";
        }];
        readonly name: "getChallengerEnrollment";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "enum EnrollmentStatus";
                readonly name: "status";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint248";
                readonly name: "unenrollmentStartBlock";
                readonly type: "uint248";
            }];
            readonly internalType: "struct Enrollment";
            readonly name: "enrollment";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }];
        readonly name: "getOperatorChallengers";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }];
        readonly name: "getOperatorRestakedStrategies";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRestakeableStrategies";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct IPaymentCoordinator.StrategyAndMultiplier[]";
                readonly name: "strategiesAndMultipliers";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTimestamp";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "duration";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IPaymentCoordinator.RangePayment[]";
            readonly name: "rangePayments";
            readonly type: "tuple[]";
        }];
        readonly name: "payForRange";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes32";
                readonly name: "salt";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "expiry";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ISignatureUtils.SignatureWithSaltAndExpiry";
            readonly name: "operatorSignature";
            readonly type: "tuple";
        }];
        readonly name: "registerOperatorToAVS";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_paymentCoordinator";
            readonly type: "address";
        }];
        readonly name: "setPaymentCoordinator";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract ISlasher";
            readonly name: "_slasher";
            readonly type: "address";
        }];
        readonly name: "setSlasher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "stakeRegistry";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IRemoteChallenger";
            readonly name: "challenger";
            readonly type: "address";
        }];
        readonly name: "startUnenrollment";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IRemoteChallenger[]";
            readonly name: "_challengers";
            readonly type: "address[]";
        }];
        readonly name: "startUnenrollment";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_metadataURI";
            readonly type: "string";
        }];
        readonly name: "updateAVSMetadataURI";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): HyperlaneServiceManagerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): HyperlaneServiceManager;
}
export {};
//# sourceMappingURL=HyperlaneServiceManager__factory.d.ts.map