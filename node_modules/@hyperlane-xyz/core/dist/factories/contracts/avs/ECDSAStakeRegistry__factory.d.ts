import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ECDSAStakeRegistry, ECDSAStakeRegistryInterface } from "../../../contracts/avs/ECDSAStakeRegistry.js";
type ECDSAStakeRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ECDSAStakeRegistry__factory extends ContractFactory {
    constructor(...args: ECDSAStakeRegistryConstructorParams);
    deploy(_delegationManager: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ECDSAStakeRegistry>;
    getDeployTransaction(_delegationManager: string, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): ECDSAStakeRegistry;
    connect(signer: Signer): ECDSAStakeRegistry__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b506040516200345738038062003457833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516133c362000094600039600061089d01526133c36000f3fe608060405234801561001057600080fd5b50600436106101a25760003560e01c8063696255be116100ee57806398ec1ac911610097578063cdcd358111610071578063cdcd358114610377578063dec5d1f61461038a578063ec7fbb311461039d578063f2fde38b146103e657600080fd5b806398ec1ac914610349578063ab1189951461035c578063b933fa741461036f57600080fd5b8063857dc190116100c8578063857dc190146103105780638da5cb5b14610318578063955f2d901461033657600080fd5b8063696255be146102e2578063715018a6146102f5578063743c31f4146102fd57600080fd5b80633b242e4a116101505780635140a5481161012a5780635140a548146102845780635e1042e8146102975780635ef53329146102cf57600080fd5b80633b242e4a146102565780633d5611f61461026957806340bf2fb71461027c57600080fd5b80631703a018116101815780631703a018146102265780631e4cd85e1461023b578063314f3a491461024e57600080fd5b8062cf2ab5146101a75780630dba3394146101bc5780631626ba7e146101e2575b600080fd5b6101ba6101b536600461283e565b6103f9565b005b6101cf6101ca36600461288d565b610405565b6040519081526020015b60405180910390f35b6101f56101f0366004612941565b610421565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101d9565b61022e610478565b6040516101d991906129fd565b6101cf61024936600461288d565b61052e565b6101cf610544565b6101cf610264366004612a10565b610573565b6101ba610277366004612a2d565b6105c5565b6067546101cf565b6101ba610292366004612adb565b6105d4565b6102aa6102a5366004612ba5565b6105f7565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d9565b6101ba6102dd366004612bd1565b61062d565b6101ba6102f0366004612bea565b61063e565b6101ba610658565b6101ba61030b366004612a10565b61066c565b6101ba6106bf565b60335473ffffffffffffffffffffffffffffffffffffffff166102aa565b6101cf610344366004612c27565b6106c8565b6101cf610357366004612a10565b610700565b6101ba61036a366004612d3c565b6109e1565b6101cf610b7e565b6102aa610385366004612a10565b610b8a565b6101ba610398366004612d95565b610bb8565b6103d66103ab366004612a10565b73ffffffffffffffffffffffffffffffffffffffff166000908152606e602052604090205460ff1690565b60405190151581526020016101d9565b6101ba6103f4366004612a10565b610bc9565b61040281610c7d565b50565b600061041b606b63ffffffff80851690610cd416565b92915050565b6000806000808480602001905181019061043b9190612edf565b92509250925061044d86848484610dd9565b507f1626ba7e0000000000000000000000000000000000000000000000000000000095945050505050565b6040805160208101909152606081526040805160668054602081810284018501855283018181529293919284929091849160009085015b82821015610521576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff16818301528252600190920191016104af565b5050505081525050905090565b600061041b606c63ffffffff80851690610cd416565b6000610550606b610e98565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16905090565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606d602052604081206105a190610e98565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692915050565b6105d0338383610ee7565b5050565b6105d0826000815181106105ea576105ea612fb4565b60200260200101516110a3565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606a602052604081206106269083610cd4565b9392505050565b6106356110df565b61040281611160565b6106466110df565b61064f826111a3565b6105d081610c7d565b6106606110df565b61066a60006111e9565b565b336000908152606e602052604090205460ff166106b5576040517f25ec6c1f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104023382611260565b61066a33611353565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606d602052604081206106269063ffffffff80851690610cd416565b6000806066600001805480602002602001604051908101604052809291908181526020016000905b8282101561079a576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1681830152825260019092019101610728565b505050509050600080825167ffffffffffffffff8111156107bd576107bd6126ba565b6040519080825280602002602001820160405280156107e6578160200160208202803683370190505b50905060005b835181101561085c5783818151811061080757610807612fb4565b60200260200101516000015182828151811061082557610825612fb4565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061085481613012565b9150506107ec565b506040517f9004134700000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906390041347906108d4908990869060040161304a565b600060405180830381865afa1580156108f1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261093791908101906130b2565b905060005b84518110156109b35784818151811061095757610957612fb4565b6020026020010151602001516bffffffffffffffffffffffff1682828151811061098357610983612fb4565b60200260200101516109959190613143565b61099f908561315a565b9350806109ab81613012565b91505061093c565b506109c06127108461316d565b925060675483106109d5575090949350505050565b50600095945050505050565b600054610100900460ff1615808015610a015750600054600160ff909116105b80610a1b5750303b158015610a1b575060005460ff166001145b610aac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610b0a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610b158484846114fa565b8015610b7857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6000610550606c610e98565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606a6020526040812061041b90610e98565b610bc06110df565b61064f826115f0565b610bd16110df565b73ffffffffffffffffffffffffffffffffffffffff8116610c74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610aa3565b610402816111e9565b6000805b8251811015610cca57610cac838281518110610c9f57610c9f612fb4565b60200260200101516117ae565b610cb690836131a8565b915080610cc281613012565b915050610c81565b50610b7881611938565b6000438210610d3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610aa3565b6000610d4a836119c2565b84549091506000610d5d86848385611a5c565b90508015610dae57610d8286610d746001846131d0565b600091825260209091200190565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610db1565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169695505050505050565b600083519050600080600080610df0858851611aba565b60005b85811015610e8257888181518110610e0d57610e0d612fb4565b60200260200101519450610e218588611b2d565b9250610e2d8486611ba6565b610e51838b8a8481518110610e4457610e44612fb4565b6020026020010151611c0b565b8493506000610e608689611c62565b9050610e6c818461315a565b9250508080610e7a90613012565b915050610df3565b50610e8d8187611cdb565b505050505050505050565b80546000908015610ede57610eb283610d746001846131d0565b5464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610626565b60009392505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152606e602052604090205460ff1615610f47576040517f42ee68b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60658054906000610f5783613012565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152606e6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610fb3846117ae565b9050610fbe81611938565b5050610fca8483611260565b6068546040517f9926ee7d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639926ee7d90611022908790879060040161322d565b600060405180830381600087803b15801561103c57600080fd5b505af1158015611050573d6000803e3d6000fd5b505060685460405173ffffffffffffffffffffffffffffffffffffffff918216935090871691507fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c190600090a350505050565b6065548151146103f9576040517f2d3df6b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60335473ffffffffffffffffffffffffffffffffffffffff16331461066a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610aa3565b61116b606c82611d69565b50506040518181527f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b9060200160405180910390a150565b606780549082905560408051828152602081018490527f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f91015b60405180910390a15050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606a6020526040812061128e90610e98565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112c857505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152606a602052604090206112f9918416611d69565b505060405173ffffffffffffffffffffffffffffffffffffffff82811682528084169143918616907fd061168252f441733658f09e4d8f5b2d998ed4ef24a2bbfd6ceca52ea13150029060200160405180910390a4505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606e602052604090205460ff166113b2576040517f25ec6c1f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606580549060006113c283613286565b909155505073ffffffffffffffffffffffffffffffffffffffff81166000908152606e6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905561141b826117ae565b905061142681611938565b50506068546040517fa364f4da00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529091169063a364f4da90602401600060405180830381600087803b15801561149557600080fd5b505af11580156114a9573d6000803e3d6000fd5b505060685460405173ffffffffffffffffffffffffffffffffffffffff918216935090851691507f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed58090600090a35050565b600054610100900460ff16611591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610aa3565b606880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790556115da82611160565b6115e3816115f0565b6115eb611db4565b505050565b6115f981611e53565b61162f576040517fd173577900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051606680546020818102840185018552830181815260009484928491879085015b828210156116c5576000848152602090819020604080518082019091529084015473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1681830152825260019092019101611653565b5050509152509091506066905060006116de828261268c565b505060005b82515181101561177c5782518051606691908390811061170557611705612fb4565b6020908102919091018101518254600181018455600093845292829020815191909201516bffffffffffffffffffffffff16740100000000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff909116179101558061177481613012565b9150506116e3565b507f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e81836040516111dd9291906132bb565b73ffffffffffffffffffffffffffffffffffffffff81166000908152606d602052604081208190819081906117e290610e98565b73ffffffffffffffffffffffffffffffffffffffff86166000908152606e60205260409020547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91909116915060ff166118845761183c81846132e9565b92508260000361184f5750909392505050565b73ffffffffffffffffffffffffffffffffffffffff85166000908152606d6020526040812061187d91611d69565b50506118de565b61188d85610700565b915061189981836132e9565b9250826000036118ac5750909392505050565b73ffffffffffffffffffffffffffffffffffffffff85166000908152606d602052604090206118db9083611d69565b50505b604080518281526020810184905273ffffffffffffffffffffffffffffffffffffffff8716917f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594910160405180910390a250909392505050565b600080611945606b610e98565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169150600061197184846131a8565b9150819050611981606b82611d69565b505060408051848152602081018490527f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b910160405180910390a150915091565b600063ffffffff821115611a58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610aa3565b5090565b60005b81831015611ab2576000611a738484611f5b565b60008781526020902090915063ffffffff86169082015463ffffffff161115611a9e57809250611aac565b611aa981600161315a565b93505b50611a5f565b509392505050565b808214611af3576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000036105d0576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000438263ffffffff1610611b6e576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152606a602052604090206106269063ffffffff80851690610cd416565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16106105d0576040517fba50f91100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c2c73ffffffffffffffffffffffffffffffffffffffff84168383611f76565b6115eb576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000438263ffffffff1610611ca3576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152606d602052604090206106269063ffffffff80851690610cd416565b6000611ce682611ff1565b905080831115611d22576040517f960b41ee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d2d83612046565b905083811115610b78576040517fe121632f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080611d8784611d79436119c2565b611d828661209b565b612149565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff91821693501690505b9250929050565b600054610100900460ff16611e4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610aa3565b61066a61235e565b8051600090818080805b8451811015611f3957848181518110611e7857611e78612fb4565b60200260200101516000015192508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611eeb576040517fba50f91100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b829350848181518110611f0057611f00612fb4565b6020026020010151602001516bffffffffffffffffffffffff1682611f25919061315a565b915080611f3181613012565b915050611e5d565b506127108114611f4f5750600095945050505050565b50600195945050505050565b6000611f6a600284841861316d565b6106269084841661315a565b6000806000611f8585856123fe565b90925090506000816004811115611f9e57611f9e613310565b148015611fd657508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611fe75750611fe7868686612440565b9695505050505050565b6000438263ffffffff1610612032576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041b606b63ffffffff80851690610cd416565b6000438263ffffffff1610612087576040517fe64f180f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041b606c63ffffffff80851690610cd416565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff821115611a58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610aa3565b8254600090819080156122eb57600061216787610d746001856131d0565b60408051808201909152905463ffffffff8082168084526401000000009092047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660208401529192509087161015612218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f436865636b706f696e743a2064656372656173696e67206b65797300000000006044820152606401610aa3565b805163ffffffff808816911603612276578461223988610d746001866131d0565b80547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff929092166401000000000263ffffffff9092169190911790556122db565b6040805180820190915263ffffffff80881682527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b6020015192508391506123569050565b50506040805180820190915263ffffffff80851682527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b600054610100900460ff166123f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610aa3565b61066a336111e9565b60008082516041036124345760208301516040840151606085015160001a6124288782858561259d565b94509450505050611dad565b50600090506002611dad565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b868660405160240161247792919061333f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516125009190613358565b600060405180830381855afa9150503d806000811461253b576040519150601f19603f3d011682016040523d82523d6000602084013e612540565b606091505b509150915081801561255457506020815110155b8015611fe7575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906125929083016020908101908401613374565b149695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156125d45750600090506003612683565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612628573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661267c57600060019250925050612683565b9150600090505b94509492505050565b508054600082559060005260206000209081019061040291905b80821115611a5857600081556001016126a6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff8111828210171561270c5761270c6126ba565b60405290565b6040805190810167ffffffffffffffff8111828210171561270c5761270c6126ba565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561277c5761277c6126ba565b604052919050565b600067ffffffffffffffff82111561279e5761279e6126ba565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461040257600080fd5b600082601f8301126127db57600080fd5b813560206127f06127eb83612784565b612735565b82815260059290921b8401810191818101908684111561280f57600080fd5b8286015b84811015612833578035612826816127a8565b8352918301918301612813565b509695505050505050565b60006020828403121561285057600080fd5b813567ffffffffffffffff81111561286757600080fd5b612873848285016127ca565b949350505050565b63ffffffff8116811461040257600080fd5b60006020828403121561289f57600080fd5b81356106268161287b565b600067ffffffffffffffff8211156128c4576128c46126ba565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261290157600080fd5b813561290f6127eb826128aa565b81815284602083860101111561292457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561295457600080fd5b82359150602083013567ffffffffffffffff81111561297257600080fd5b61297e858286016128f0565b9150509250929050565b8051602080845281518482018190526000926040919083019082870190855b818110156129f0578351805173ffffffffffffffffffffffffffffffffffffffff1684528601516bffffffffffffffffffffffff168684015292850192918401916001016129a7565b5090979650505050505050565b6020815260006106266020830184612988565b600060208284031215612a2257600080fd5b8135610626816127a8565b60008060408385031215612a4057600080fd5b823567ffffffffffffffff80821115612a5857600080fd5b9084019060608287031215612a6c57600080fd5b604051606081018181108382111715612a8757612a876126ba565b604052823582811115612a9957600080fd5b612aa5888286016128f0565b82525060208301356020820152604083013560408201528094505050506020830135612ad0816127a8565b809150509250929050565b60008060408385031215612aee57600080fd5b823567ffffffffffffffff80821115612b0657600080fd5b818501915085601f830112612b1a57600080fd5b81356020612b2a6127eb83612784565b82815260059290921b84018101918181019089841115612b4957600080fd5b8286015b84811015612b8157803586811115612b655760008081fd5b612b738c86838b01016127ca565b845250918301918301612b4d565b5096505086013592505080821115612b9857600080fd5b5061297e858286016128f0565b60008060408385031215612bb857600080fd5b8235612bc3816127a8565b946020939093013593505050565b600060208284031215612be357600080fd5b5035919050565b60008060408385031215612bfd57600080fd5b82359150602083013567ffffffffffffffff811115612c1b57600080fd5b61297e858286016127ca565b60008060408385031215612c3a57600080fd5b8235612c45816127a8565b91506020830135612ad08161287b565b60006020808385031215612c6857600080fd5b612c706126e9565b9150823567ffffffffffffffff811115612c8957600080fd5b8301601f81018513612c9a57600080fd5b8035612ca86127eb82612784565b81815260069190911b82018301908381019087831115612cc757600080fd5b928401925b82841015612d2f5760408489031215612ce55760008081fd5b612ced612712565b8435612cf8816127a8565b8152848601356bffffffffffffffffffffffff81168114612d195760008081fd5b8187015282526040939093019290840190612ccc565b8552509295945050505050565b600080600060608486031215612d5157600080fd5b8335612d5c816127a8565b925060208401359150604084013567ffffffffffffffff811115612d7f57600080fd5b612d8b86828701612c55565b9150509250925092565b60008060408385031215612da857600080fd5b823567ffffffffffffffff80821115612dc057600080fd5b612dcc86838701612c55565b93506020850135915080821115612de257600080fd5b5061297e858286016127ca565b60005b83811015612e0a578181015183820152602001612df2565b50506000910152565b600082601f830112612e2457600080fd5b81516020612e346127eb83612784565b82815260059290921b84018101918181019086841115612e5357600080fd5b8286015b8481101561283357805167ffffffffffffffff811115612e775760008081fd5b8701603f81018913612e895760008081fd5b848101516040612e9b6127eb836128aa565b8281528b82848601011115612eb05760008081fd5b612ebf83898301848701612def565b8652505050918301918301612e57565b8051612eda8161287b565b919050565b600080600060608486031215612ef457600080fd5b835167ffffffffffffffff80821115612f0c57600080fd5b818601915086601f830112612f2057600080fd5b81516020612f306127eb83612784565b82815260059290921b8401810191818101908a841115612f4f57600080fd5b948201945b83861015612f76578551612f67816127a8565b82529482019490820190612f54565b91890151919750909350505080821115612f8f57600080fd5b50612f9c86828701612e13565b925050612fab60408501612ecf565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361304357613043612fe3565b5060010190565b60006040820173ffffffffffffffffffffffffffffffffffffffff80861684526020604081860152828651808552606087019150828801945060005b818110156130a4578551851683529483019491830191600101613086565b509098975050505050505050565b600060208083850312156130c557600080fd5b825167ffffffffffffffff8111156130dc57600080fd5b8301601f810185136130ed57600080fd5b80516130fb6127eb82612784565b81815260059190911b8201830190838101908783111561311a57600080fd5b928401925b828410156131385783518252928401929084019061311f565b979650505050505050565b808202811582820484141761041b5761041b612fe3565b8082018082111561041b5761041b612fe3565b6000826131a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80820182811260008312801582168215821617156131c8576131c8612fe3565b505092915050565b8181038181111561041b5761041b612fe3565b600081518084526131fb816020860160208601612def565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600082516060604084015261326560a08401826131e3565b90506020840151606084015260408401516080840152809150509392505050565b60008161329557613295612fe3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6040815260006132ce6040830185612988565b82810360208401526132e08185612988565b95945050505050565b818103600083128015838313168383128216171561330957613309612fe3565b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82815260406020820152600061287360408301846131e3565b6000825161336a818460208701612def565b9190910192915050565b60006020828403121561338657600080fd5b505191905056fea26469706673582212203f20f89b0ee467b05a2a33819e83ff2f2ea38e6112b887255ca27cbf8973950364736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IDelegationManager";
            readonly name: "_delegationManager";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientSignedStake";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientWeight";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidQuorum";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidReferenceBlock";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignedWeight";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidThreshold";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "LengthMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MustUpdateAllOperators";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSorted";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OperatorAlreadyRegistered";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "OperatorNotRegistered";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_old";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_new";
            readonly type: "uint256";
        }];
        readonly name: "MinimumWeightUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_avs";
            readonly type: "address";
        }];
        readonly name: "OperatorDeregistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_avs";
            readonly type: "address";
        }];
        readonly name: "OperatorRegistered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "oldWeight";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newWeight";
            readonly type: "uint256";
        }];
        readonly name: "OperatorWeightUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct StrategyParams[]";
                readonly name: "strategies";
                readonly type: "tuple[]";
            }];
            readonly indexed: false;
            readonly internalType: "struct Quorum";
            readonly name: "_old";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct StrategyParams[]";
                readonly name: "strategies";
                readonly type: "tuple[]";
            }];
            readonly indexed: false;
            readonly internalType: "struct Quorum";
            readonly name: "_new";
            readonly type: "tuple";
        }];
        readonly name: "QuorumUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "updateBlock";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newSigningKey";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "oldSigningKey";
            readonly type: "address";
        }];
        readonly name: "SigningKeyUpdate";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_thresholdWeight";
            readonly type: "uint256";
        }];
        readonly name: "ThresholdWeightUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "oldTotalWeight";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newTotalWeight";
            readonly type: "uint256";
        }];
        readonly name: "TotalWeightUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "oldMinimumWeight";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newMinimumWeight";
            readonly type: "uint256";
        }];
        readonly name: "UpdateMinimumWeight";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "deregisterOperator";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }];
        readonly name: "getLastCheckpointOperatorWeight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getLastCheckpointThresholdWeight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_blockNumber";
            readonly type: "uint32";
        }];
        readonly name: "getLastCheckpointThresholdWeightAtBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getLastCheckpointTotalWeight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_blockNumber";
            readonly type: "uint32";
        }];
        readonly name: "getLastCheckpointTotalWeightAtBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }];
        readonly name: "getLastestOperatorSigningKey";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "getOperatorSigningKeyAtBlock";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }];
        readonly name: "getOperatorWeight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_blockNumber";
            readonly type: "uint32";
        }];
        readonly name: "getOperatorWeightAtBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_serviceManager";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_thresholdWeight";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct StrategyParams[]";
                readonly name: "strategies";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct Quorum";
            readonly name: "_quorum";
            readonly type: "tuple";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_dataHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_signatureData";
            readonly type: "bytes";
        }];
        readonly name: "isValidSignature";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "minimumWeight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_operator";
            readonly type: "address";
        }];
        readonly name: "operatorRegistered";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "quorum";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct StrategyParams[]";
                readonly name: "strategies";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct Quorum";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes32";
                readonly name: "salt";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "expiry";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ISignatureUtils.SignatureWithSaltAndExpiry";
            readonly name: "_operatorSignature";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "_signingKey";
            readonly type: "address";
        }];
        readonly name: "registerOperatorWithSignature";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_newMinimumWeight";
            readonly type: "uint256";
        }, {
            readonly internalType: "address[]";
            readonly name: "_operators";
            readonly type: "address[]";
        }];
        readonly name: "updateMinimumWeight";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_newSigningKey";
            readonly type: "address";
        }];
        readonly name: "updateOperatorSigningKey";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "_operators";
            readonly type: "address[]";
        }];
        readonly name: "updateOperators";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[][]";
            readonly name: "operatorsPerQuorum";
            readonly type: "address[][]";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "updateOperatorsForQuorum";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct StrategyParams[]";
                readonly name: "strategies";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct Quorum";
            readonly name: "_quorum";
            readonly type: "tuple";
        }, {
            readonly internalType: "address[]";
            readonly name: "_operators";
            readonly type: "address[]";
        }];
        readonly name: "updateQuorumConfig";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_thresholdWeight";
            readonly type: "uint256";
        }];
        readonly name: "updateStakeThreshold";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ECDSAStakeRegistryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ECDSAStakeRegistry;
}
export {};
//# sourceMappingURL=ECDSAStakeRegistry__factory.d.ts.map