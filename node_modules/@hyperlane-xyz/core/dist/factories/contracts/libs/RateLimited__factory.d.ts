import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RateLimited, RateLimitedInterface } from "../../../contracts/libs/RateLimited.js";
type RateLimitedConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RateLimited__factory extends ContractFactory {
    constructor(...args: RateLimitedConstructorParams);
    deploy(_capacity: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<RateLimited>;
    getDeployTransaction(_capacity: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): RateLimited;
    connect(signer: Signer): RateLimited__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060405161082638038061082683398101604081905261002f91610160565b6100383361004a565b6100418161009c565b5060655561019b565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006100a6610100565b60665460006100b86201518085610179565b606681905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c16910160405180910390a19392505050565b6033546001600160a01b0316331461015e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b60006020828403121561017257600080fd5b5051919050565b60008261019657634e487b7160e01b600052601260045260246000fd5b500490565b61067c806101aa6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806380f264ee11610081578063c0bc6d841161005b578063c0bc6d841461015d578063d0b06f5d14610165578063f2fde38b1461016e57600080fd5b806380f264ee1461010f5780638da5cb5b14610122578063a66352fa1461014a57600080fd5b806349a3e3d0116100b257806349a3e3d0146100f457806359b6a0c9146100fd578063715018a61461010557600080fd5b80631be05289146100ce578063435635a1146100eb575b600080fd5b6100d86201518081565b6040519081526020015b60405180910390f35b6100d860665481565b6100d860655481565b6100d8610181565b61010d610199565b005b6100d861011d366004610543565b6101ad565b60335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e2565b6100d8610158366004610543565b610211565b6100d86102aa565b6100d860675481565b61010d61017c36600461055c565b61036d565b60006201518060665461019491906105c8565b905090565b6101a1610424565b6101ab60006104a5565b565b60006101b7610424565b60665460006101c962015180856105e5565b606681905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c16910160405180910390a19392505050565b60008061021c6102aa565b90508083111561028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f526174654c696d6974457863656564656400000000000000000000000000000060448201526064015b60405180910390fd5b60006102998483610620565b606581905542606755949350505050565b6000806102b5610181565b905060008111610321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526174654c696d69744e6f7453657400000000000000000000000000000000006044820152606401610284565b620151806067546103329190610633565b42111561033e57919050565b600061034861051c565b6065546103559190610633565b90508181116103645780610366565b815b9250505090565b610375610424565b73ffffffffffffffffffffffffffffffffffffffff8116610418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610284565b610421816104a5565b50565b60335473ffffffffffffffffffffffffffffffffffffffff1633146101ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610284565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806067544261052d9190610620565b90506066548161053d91906105c8565b91505090565b60006020828403121561055557600080fd5b5035919050565b60006020828403121561056e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461059257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176105df576105df610599565b92915050565b60008261061b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b818103818111156105df576105df610599565b808201808211156105df576105df61059956fea2646970667358221220b4af4270deebea871ecf91da933348fab356768fd23c0c7602ee0f12f8b278a664736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_capacity";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newLimit";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "targetLimit";
            readonly type: "uint256";
        }];
        readonly name: "RateLimitExceeded";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_oldCapacity";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_newCapacity";
            readonly type: "uint256";
        }];
        readonly name: "RateLimitSet";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DURATION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "calculateCurrentLevel";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "filledLevel";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastUpdated";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "maxCapacity";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "refillRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_capacity";
            readonly type: "uint256";
        }];
        readonly name: "setRefillRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_newAmount";
            readonly type: "uint256";
        }];
        readonly name: "validateAndConsumeFilledLevel";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): RateLimitedInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RateLimited;
}
export {};
//# sourceMappingURL=RateLimited__factory.d.ts.map