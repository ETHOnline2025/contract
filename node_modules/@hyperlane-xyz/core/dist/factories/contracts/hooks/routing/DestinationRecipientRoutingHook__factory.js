/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "mailbox",
                type: "address",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
            },
            {
                internalType: "bytes32",
                name: "recipient",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "hook",
                type: "address",
            },
        ],
        name: "configCustomHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "customHooks",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "hook",
        outputs: [
            {
                internalType: "contract IPostDispatchHook",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "hookType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        name: "hooks",
        outputs: [
            {
                internalType: "contract IPostDispatchHook",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "interchainSecurityModule",
        outputs: [
            {
                internalType: "contract IInterchainSecurityModule",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "localDomain",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "mailbox",
        outputs: [
            {
                internalType: "contract IMailbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "postDispatch",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "quoteDispatch",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_hook",
                type: "address",
            },
        ],
        name: "setHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destination",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_hook",
                type: "address",
            },
        ],
        name: "setHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "destination",
                        type: "uint32",
                    },
                    {
                        internalType: "address",
                        name: "hook",
                        type: "address",
                    },
                ],
                internalType: "struct DomainRoutingHook.HookConfig[]",
                name: "configs",
                type: "tuple[]",
            },
        ],
        name: "setHooks",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_module",
                type: "address",
            },
        ],
        name: "setInterchainSecurityModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "supportsMetadata",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60c06040523480156200001157600080fd5b506040516200175a3803806200175a8339810160408190526200003491620001a0565b818181806001600160a01b0381163b620000945760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001059190620001d8565b63ffffffff1660a052620001193362000131565b506200012790508162000131565b5050505062000207565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200019b57600080fd5b919050565b60008060408385031215620001b457600080fd5b620001bf8362000183565b9150620001cf6020840162000183565b90509250929050565b600060208284031215620001eb57600080fd5b815163ffffffff811681146200020057600080fd5b9392505050565b60805160a05161152d6200022d600039600061028f01526000610394015261152d6000f3fe6080604052600436106101295760003560e01c80638da5cb5b116100a5578063d5438eae11610074578063e445e7dd11610059578063e445e7dd146103e3578063e5320bb9146103ff578063f2fde38b1461042f57600080fd5b8063d5438eae14610382578063de523cf3146103b657600080fd5b80638da5cb5b146102c6578063aaccd230146102f1578063b646f64c1461031f578063b6add9b61461036257600080fd5b8063715018a6116100fc5780637f5a7c7b116100e15780637f5a7c7b14610230578063843cb3631461025d5780638d3638f41461027d57600080fd5b8063715018a6146101fb57806376f9d6c71461021057600080fd5b8063086011b91461012e5780630e72cc06146101435780631e42f41d146101635780633dfd3873146101db575b600080fd5b61014161013c366004610fe9565b61044f565b005b34801561014f57600080fd5b5061014161015e36600461107e565b6104fc565b34801561016f57600080fd5b506101b161017e3660046110ad565b609860209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101e757600080fd5b506101416101f636600461107e565b610612565b34801561020757600080fd5b50610141610728565b34801561021c57600080fd5b5061014161022b3660046110d7565b61073c565b34801561023c57600080fd5b506065546101b19073ffffffffffffffffffffffffffffffffffffffff1681565b34801561026957600080fd5b5061014161027836600461110a565b61079f565b34801561028957600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101d2565b3480156102d257600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166101b1565b3480156102fd57600080fd5b5061031161030c366004610fe9565b61081e565b6040519081526020016101d2565b34801561032b57600080fd5b506101b161033a36600461117f565b60976020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561036e57600080fd5b5061014161037d36600461119a565b6108cb565b34801561038e57600080fd5b506101b17f000000000000000000000000000000000000000000000000000000000000000081565b3480156103c257600080fd5b506066546101b19073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103ef57600080fd5b50604051600181526020016101d2565b34801561040b57600080fd5b5061041f61041a3660046111d6565b610938565b60405190151581526020016101d2565b34801561043b57600080fd5b5061014161044a36600461107e565b610941565b6104598484610938565b6104ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b6104f6848484846109f8565b50505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610536575073ffffffffffffffffffffffffffffffffffffffff8116155b6105c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104e1565b6105ca610b01565b50606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061064c575073ffffffffffffffffffffffffffffffffffffffff8116155b6106d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104e1565b6106e0610b01565b50606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610730610b01565b61073a6000610b82565b565b610744610b01565b63ffffffff91909116600090815260976020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6107a7610b01565b60005b81811015610819576108078383838181106107c7576107c7611218565b6107dd926020604090920201908101915061117f565b8484848181106107ef576107ef611218565b905060400201602001602081019061022b919061107e565b8061081181611247565b9150506107aa565b505050565b600061082a8585610938565b6108b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084016104e1565b6108c285858585610bf9565b95945050505050565b6108d3610b01565b63ffffffff9290921660009081526098602090815260408083209383529290522080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60015b92915050565b610949610b01565b73ffffffffffffffffffffffffffffffffffffffff81166109ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104e1565b6109f581610b82565b50565b600060986000610a088585610c84565b63ffffffff1663ffffffff1681526020019081526020016000206000610a2e8585610ca7565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1690508015610aee576040517f086011b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063086011b9903490610ab79089908990899089906004016112ef565b6000604051808303818588803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b5050505050610afa565b610afa85858585610cc7565b5050505050565b60335473ffffffffffffffffffffffffffffffffffffffff16331461073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e1565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610c058383610d48565b73ffffffffffffffffffffffffffffffffffffffff1663aaccd230868686866040518563ffffffff1660e01b8152600401610c4394939291906112ef565b602060405180830381865afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190611321565b6000610c94602d6029848661133a565b610c9d91611364565b60e01c9392505050565b6000610cb7604d602d848661133a565b610cc0916113ac565b9392505050565b610cd18282610d48565b73ffffffffffffffffffffffffffffffffffffffff1663086011b934868686866040518663ffffffff1660e01b8152600401610d1094939291906112ef565b6000604051808303818588803b158015610d2957600080fd5b505af1158015610d3d573d6000803e3d6000fd5b505050505050505050565b600060976000610d588585610c84565b63ffffffff16815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff169050801515610da2610d978585610c84565b63ffffffff16610e00565b604051602001610db2919061140c565b60405160208183030381529060405290610df9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e19190611477565b5092915050565b60606000610e0d83610ebe565b600101905060008167ffffffffffffffff811115610e2d57610e2d6114c8565b6040519080825280601f01601f191660200182016040528015610e57576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610e6157509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610f07577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610f33576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f5157662386f26fc10000830492506010015b6305f5e1008310610f69576305f5e100830492506008015b6127108310610f7d57612710830492506004015b60648310610f8f576064830492506002015b600a831061093b5760010192915050565b60008083601f840112610fb257600080fd5b50813567ffffffffffffffff811115610fca57600080fd5b602083019150836020828501011115610fe257600080fd5b9250929050565b60008060008060408587031215610fff57600080fd5b843567ffffffffffffffff8082111561101757600080fd5b61102388838901610fa0565b9096509450602087013591508082111561103c57600080fd5b5061104987828801610fa0565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461107957600080fd5b919050565b60006020828403121561109057600080fd5b610cc082611055565b803563ffffffff8116811461107957600080fd5b600080604083850312156110c057600080fd5b6110c983611099565b946020939093013593505050565b600080604083850312156110ea57600080fd5b6110f383611099565b915061110160208401611055565b90509250929050565b6000806020838503121561111d57600080fd5b823567ffffffffffffffff8082111561113557600080fd5b818501915085601f83011261114957600080fd5b81358181111561115857600080fd5b8660208260061b850101111561116d57600080fd5b60209290920196919550909350505050565b60006020828403121561119157600080fd5b610cc082611099565b6000806000606084860312156111af57600080fd5b6111b884611099565b9250602084013591506111cd60408501611055565b90509250925092565b600080602083850312156111e957600080fd5b823567ffffffffffffffff81111561120057600080fd5b61120c85828601610fa0565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361129f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006113036040830186886112a6565b82810360208401526113168185876112a6565b979650505050505050565b60006020828403121561133357600080fd5b5051919050565b6000808585111561134a57600080fd5b8386111561135757600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156113a45780818660040360031b1b83161692505b505092915050565b8035602083101561093b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b60005b838110156114035781810151838201526020016113eb565b50506000910152565b7f4e6f20686f6f6b20636f6e6669677572656420666f722064657374696e61746981527f6f6e3a200000000000000000000000000000000000000000000000000000000060208201526000825161146a8160248501602087016113e8565b9190910160240192915050565b60208152600082518060208401526114968160408501602087016113e8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220dd28cacf1e6796bde5f4b8c38da2c76127f1c7f5ca8c27792ae3f12d1af91bd664736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
export class DestinationRecipientRoutingHook__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(mailbox, owner, overrides) {
        return super.deploy(mailbox, owner, overrides || {});
    }
    getDeployTransaction(mailbox, owner, overrides) {
        return super.getDeployTransaction(mailbox, owner, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=DestinationRecipientRoutingHook__factory.js.map