import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockMailbox, MockMailboxInterface } from "../../../contracts/mock/MockMailbox.js";
type MockMailboxConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockMailbox__factory extends ContractFactory {
    constructor(...args: MockMailboxConstructorParams);
    deploy(_domain: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<MockMailbox>;
    getDeployTransaction(_domain: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): MockMailbox;
    connect(signer: Signer): MockMailbox__factory;
    static readonly bytecode = "0x60c0604052606b80546001600160401b03191690553480156200002157600080fd5b50604051620031b1380380620031b1833981016040819052620000449162000248565b4360805263ffffffff811660a05260405160009062000063906200022c565b604051809103906000f08015801562000080573d6000803e3d6000fd5b50606780546001600160a01b0319166001600160a01b038316179055604051909150600090620000b0906200023a565b604051809103906000f080158015620000cd573d6000803e3d6000fd5b50606880546001600160a01b0383166001600160a01b031991821681179092556069805490911690911790559050620001063362000119565b620001106200016b565b50505062000277565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1615620001d85760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146200022a576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6102258062002c0683390190565b6103868062002e2b83390190565b6000602082840312156200025b57600080fd5b815163ffffffff811681146200027057600080fd5b9392505050565b60805160a05161295b620002ab6000396000818161050501528181610c950152611981015260006104d1015261295b6000f3fe6080604052600436106101fe5760003560e01c80638d3638f41161011d578063d6d08a09116100b0578063f794687a1161007f578063f8c8765e11610064578063f8c8765e14610750578063fa31de0114610770578063ffa1ad741461078357600080fd5b8063f794687a14610710578063f7ccd3211461073057600080fd5b8063d6d08a0914610644578063e495f1d414610671578063e70f48ac146106d0578063f2fde38b146106f057600080fd5b80639c42bd18116100ec5780639c42bd181461059f578063a3b4919f146105bf578063affed0e014610602578063d12164e41461061f57600080fd5b80638d3638f4146104f35780638da5cb5b1461052757806392d28b3d1461055257806399b048091461057f57600080fd5b806359b3f6e0116101955780637c39d130116101645780637c39d1301461045a57806381d2ea951461046d5780638209d3121461048d57806382ea7bfe146104bf57600080fd5b806359b3f6e01461035f5780635d1fe5a9146103d55780636e5f516e14610418578063715018a61461044557600080fd5b80631605c306116101d15780631605c306146102c55780633288990c146102da5780633d1250b7146102fa57806348aee8d41461034c57600080fd5b806307a2fda11461020357806310b83dc01461026c578063134fbb4f1461028d5780631426b7f4146102a3575b600080fd5b34801561020f57600080fd5b5061025061021e366004611fb3565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff1690565b60405165ffffffffffff90911681526020015b60405180910390f35b61027f61027a366004612049565b6107aa565b604051908152602001610263565b34801561029957600080fd5b5061027f60665481565b3480156102af57600080fd5b506102c36102be3660046120e7565b6108fa565b005b3480156102d157600080fd5b506102c3610a15565b3480156102e657600080fd5b506102c36102f5366004612104565b610b6f565b34801561030657600080fd5b506068546103279073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610263565b61027f61035a366004612146565b610bcb565b34801561036b57600080fd5b506102c361037a3660046121d0565b63ffffffff919091166000908152606c6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b3480156103e157600080fd5b506103276103f0366004611fb3565b6000908152606a602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b34801561042457600080fd5b506067546103279073ffffffffffffffffffffffffffffffffffffffff1681565b34801561045157600080fd5b506102c3610c09565b6102c3610468366004612207565b610c1d565b34801561047957600080fd5b5061027f610488366004612049565b6110bf565b34801561049957600080fd5b50606b546104aa9063ffffffff1681565b60405163ffffffff9091168152602001610263565b3480156104cb57600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ff57600080fd5b506104aa7f000000000000000000000000000000000000000000000000000000000000000081565b34801561053357600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610327565b34801561055e57600080fd5b5061057261056d366004611fb3565b611252565b60405161026391906122e1565b34801561058b57600080fd5b506102c361059a3660046120e7565b6112ec565b3480156105ab57600080fd5b5061027f6105ba3660046122f4565b611407565b3480156105cb57600080fd5b506103276105da366004612342565b606c6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561060e57600080fd5b506065546104aa9063ffffffff1681565b34801561062b57600080fd5b50606b546104aa90640100000000900463ffffffff1681565b34801561065057600080fd5b506069546103279073ffffffffffffffffffffffffffffffffffffffff1681565b34801561067d57600080fd5b506106c061068c366004611fb3565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff16151590565b6040519015158152602001610263565b3480156106dc57600080fd5b506103276106eb3660046120e7565b611443565b3480156106fc57600080fd5b506102c361070b3660046120e7565b61157a565b34801561071c57600080fd5b506102c361072b3660046120e7565b611631565b34801561073c57600080fd5b5061027f61074b366004612146565b61174c565b34801561075c57600080fd5b506102c361076b36600461235d565b61177f565b61027f61077e3660046122f4565b611939565b34801561078f57600080fd5b50610798600381565b60405160ff9091168152602001610263565b6000806107b98989898961196c565b905060006107cc8a8a8a8a8a8a8a6119aa565b63ffffffff8b166000908152606c602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1680610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d697373696e672072656d6f7465206d61696c626f780000000000000000000060448201526064015b60405180910390fd5b6040517f3288990c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690633288990c906108b99086906004016122e1565b600060405180830381600087803b1580156108d357600080fd5b505af11580156108e7573d6000803e3d6000fd5b50939d9c50505050505050505050505050565b610902611c7e565b73ffffffffffffffffffffffffffffffffffffffff81163b6109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d61696c626f783a20726571756972656420686f6f6b206e6f7420636f6e747260448201527f6163740000000000000000000000000000000000000000000000000000000000606482015260840161085e565b606980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b190600090a250565b606b54640100000000900463ffffffff166000908152606d602052604081208054610a3f906123b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6b906123b9565b8015610ab85780601f10610a8d57610100808354040283529160200191610ab8565b820191906000526020600020905b815481529060010190602001808311610a9b57829003601f168201915b50506040517f7c39d1300000000000000000000000000000000000000000000000000000000081529394503093637c39d1309350610afc925085915060040161240c565b600060405180830381600087803b158015610b1657600080fd5b505af1158015610b2a573d6000803e3d6000fd5b5050606b8054640100000000900463ffffffff16925090506004610b4d8361245c565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050565b606b5463ffffffff166000908152606d60205260409020610b918284836124fd565b50606b805463ffffffff16906000610ba88361245c565b91906101000a81548163ffffffff021916908363ffffffff160217905550505050565b6000610bfe878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166107aa565b979650505050505050565b610c11611c7e565b610c1b6000611cff565b565b6003610c298383611d76565b60ff1614610c93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4d61696c626f783a206261642076657273696f6e000000000000000000000000604482015260640161085e565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16610cc48383611d9a565b63ffffffff1614610d31576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d61696c626f783a20756e65787065637465642064657374696e6174696f6e00604482015260640161085e565b6000610d7283838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611dbd92505050565b6000818152606a602052604090205490915074010000000000000000000000000000000000000000900465ffffffffffff1615610e0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d61696c626f783a20616c72656164792064656c697665726564000000000000604482015260640161085e565b6000610e178484611dc8565b90506000610e2482611443565b60408051808201825233815265ffffffffffff43811660208084019182526000898152606a9091529390932091518254935190911674010000000000000000000000000000000000000000027fffffffffffff000000000000000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff918216179290921790559091508216610ec28686611de1565b610ecc8787611dfa565b63ffffffff167f0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca657460405160405180910390a460405183907f1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a990600090a26040517ff7e83aee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f7e83aee90610f81908a908a908a908a90600401612660565b6020604051808303816000875af1158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190612687565b61102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d61696c626f783a2049534d20766572696669636174696f6e206661696c6564604482015260640161085e565b8173ffffffffffffffffffffffffffffffffffffffff166356d5d475346110518888611dfa565b61105b8989611de1565b6110658a8a611e0a565b6040518663ffffffff1660e01b815260040161108494939291906126a9565b6000604051808303818588803b15801561109d57600080fd5b505af11580156110b1573d6000803e3d6000fd5b505050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82166110f85760685473ffffffffffffffffffffffffffffffffffffffff1691505b60006111068989898961196c565b6040517faaccd23000000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff84169063aaccd2309061115f908890889086906004016126d9565b602060405180830381865afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a091906126ff565b6069546040517faaccd23000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063aaccd230906111fa908990899087906004016126d9565b602060405180830381865afa158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b91906126ff565b6112459190612718565b9998505050505050505050565b606d602052600090815260409020805461126b906123b9565b80601f0160208091040260200160405190810160405280929190818152602001828054611297906123b9565b80156112e45780601f106112b9576101008083540402835291602001916112e4565b820191906000526020600020905b8154815290600101906020018083116112c757829003601f168201915b505050505081565b6112f4611c7e565b73ffffffffffffffffffffffffffffffffffffffff81163b611398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4d61696c626f783a2064656661756c7420686f6f6b206e6f7420636f6e74726160448201527f6374000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b606880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d790600090a250565b600061143a8585858561141c8680838561272b565b60685473ffffffffffffffffffffffffffffffffffffffff166110bf565b95945050505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde523cf30000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff8616916114c49190612755565b600060405180830381855afa9150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b50915091508180156115165750805115155b15611559576000818060200190518101906115319190612771565b905073ffffffffffffffffffffffffffffffffffffffff81161561155757949350505050565b505b505060675473ffffffffffffffffffffffffffffffffffffffff1692915050565b611582611c7e565b73ffffffffffffffffffffffffffffffffffffffff8116611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161085e565b61162e81611cff565b50565b611639611c7e565b73ffffffffffffffffffffffffffffffffffffffff81163b6116dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f783a2064656661756c742049534d206e6f7420636f6e7472616360448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b606780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa90600090a250565b6000610bfe878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166110bf565b600054610100900460ff161580801561179f5750600054600160ff909116105b806117b95750303b1580156117b9575060005460ff166001145b611845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161085e565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156118a357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6118ab611e26565b6118b484611631565b6118bd836112ec565b6118c6826108fa565b6118cf8561157a565b801561193257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b600061143a8585858561194e8680838561272b565b60685473ffffffffffffffffffffffffffffffffffffffff166107aa565b60655460609061143a9060039063ffffffff167f00000000000000000000000000000000000000000000000000000000000000003389898989611ec5565b600073ffffffffffffffffffffffffffffffffffffffff82166119e35760685473ffffffffffffffffffffffffffffffffffffffff1691505b60006119f18989898961196c565b80516020820120606681905560658054929350909160019190600090611a1e90849063ffffffff1661278e565b92506101000a81548163ffffffff021916908363ffffffff160217905550888a63ffffffff163373ffffffffffffffffffffffffffffffffffffffff167f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c81485604051611a8a91906122e1565b60405180910390a460405181907f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a90600090a26069546040517faaccd23000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aaccd23090611b18908a908a9088906004016126d9565b602060405180830381865afa158015611b35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5991906126ff565b905080341015611b665750345b6069546040517f086011b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063086011b9908390611bc2908b908b9089906004016126d9565b6000604051808303818588803b158015611bdb57600080fd5b505af1158015611bef573d6000803e3d6000fd5b50505050508473ffffffffffffffffffffffffffffffffffffffff1663086011b98234611c1c91906127b2565b8989876040518563ffffffff1660e01b8152600401611c3d939291906126d9565b6000604051808303818588803b158015611c5657600080fd5b505af1158015611c6a573d6000803e3d6000fd5b50949e9d5050505050505050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610c1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161085e565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611d85600182848661272b565b611d8e916127c5565b60f81c90505b92915050565b6000611daa602d6029848661272b565b611db39161280d565b60e01c9392505050565b805160209091012090565b6000611dda611dd78484611f03565b90565b9392505050565b6000611df160296009848661272b565b611dda91612853565b6000611daa60096005848661272b565b366000611e1a83604d818761272b565b915091505b9250929050565b600054610100900460ff16611ebd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161085e565b610c1b611f13565b60608888888888888888604051602001611ee698979695949392919061288f565b604051602081830303815290604052905098975050505050505050565b6000611df1604d602d848661272b565b600054610100900460ff16611faa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161085e565b610c1b33611cff565b600060208284031215611fc557600080fd5b5035919050565b803563ffffffff81168114611fe057600080fd5b919050565b60008083601f840112611ff757600080fd5b50813567ffffffffffffffff81111561200f57600080fd5b602083019150836020828501011115611e1f57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461162e57600080fd5b600080600080600080600060a0888a03121561206457600080fd5b61206d88611fcc565b965060208801359550604088013567ffffffffffffffff8082111561209157600080fd5b61209d8b838c01611fe5565b909750955060608a01359150808211156120b657600080fd5b506120c38a828b01611fe5565b90945092505060808801356120d781612027565b8091505092959891949750929550565b6000602082840312156120f957600080fd5b8135611dda81612027565b6000806020838503121561211757600080fd5b823567ffffffffffffffff81111561212e57600080fd5b61213a85828601611fe5565b90969095509350505050565b6000806000806000806080878903121561215f57600080fd5b61216887611fcc565b955060208701359450604087013567ffffffffffffffff8082111561218c57600080fd5b6121988a838b01611fe5565b909650945060608901359150808211156121b157600080fd5b506121be89828a01611fe5565b979a9699509497509295939492505050565b600080604083850312156121e357600080fd5b6121ec83611fcc565b915060208301356121fc81612027565b809150509250929050565b6000806000806040858703121561221d57600080fd5b843567ffffffffffffffff8082111561223557600080fd5b61224188838901611fe5565b9096509450602087013591508082111561225a57600080fd5b5061226787828801611fe5565b95989497509550505050565b60005b8381101561228e578181015183820152602001612276565b50506000910152565b600081518084526122af816020860160208601612273565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611dda6020830184612297565b6000806000806060858703121561230a57600080fd5b61231385611fcc565b935060208501359250604085013567ffffffffffffffff81111561233657600080fd5b61226787828801611fe5565b60006020828403121561235457600080fd5b611dda82611fcc565b6000806000806080858703121561237357600080fd5b843561237e81612027565b9350602085013561238e81612027565b9250604085013561239e81612027565b915060608501356123ae81612027565b939692955090935050565b600181811c908216806123cd57607f821691505b602082108103612406577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6040815260006040820152606060208201526000611dda6060830184612297565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff8083168181036124755761247561242d565b6001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f8211156124f857600081815260208120601f850160051c810160208610156124d55750805b601f850160051c820191505b818110156124f4578281556001016124e1565b5050505b505050565b67ffffffffffffffff8311156125155761251561247f565b6125298361252383546123b9565b836124ae565b6000601f84116001811461257b57600085156125455750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355611932565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156125ca57868501358255602094850194600190920191016125aa565b5086821015612605577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b604081526000612674604083018688612617565b8281036020840152610bfe818587612617565b60006020828403121561269957600080fd5b81518015158114611dda57600080fd5b63ffffffff851681528360208201526060604082015260006126cf606083018486612617565b9695505050505050565b6040815260006126ed604083018587612617565b82810360208401526126cf8185612297565b60006020828403121561271157600080fd5b5051919050565b80820180821115611d9457611d9461242d565b6000808585111561273b57600080fd5b8386111561274857600080fd5b5050820193919092039150565b60008251612767818460208701612273565b9190910192915050565b60006020828403121561278357600080fd5b8151611dda81612027565b63ffffffff8181168382160190808211156127ab576127ab61242d565b5092915050565b81810381811115611d9457611d9461242d565b7fff0000000000000000000000000000000000000000000000000000000000000081358181169160018510156128055780818660010360031b1b83161692505b505092915050565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156128055760049490940360031b84901b1690921692915050565b80356020831015611d94577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fff000000000000000000000000000000000000000000000000000000000000008960f81b16815260007fffffffff00000000000000000000000000000000000000000000000000000000808a60e01b166001840152808960e01b166005840152876009840152808760e01b1660298401525084602d8301528284604d8401375060009101604d0190815297965050505050505056fea2646970667358221220417a4786689f0cb4a1c06c22cb47871198f5d66dc26e1cb35f0dfd55873f9cb664736f6c6343000813003360806040526000805461ffff191661010617905534801561001f57600080fd5b506101f68061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636465e69f14610046578063951a291f1461006a578063f7e83aee146100b1575b600080fd5b6000546100539060ff1681565b60405160ff90911681526020015b60405180910390f35b6100af6100783660046100e2565b60008054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b005b6100d26100bf366004610154565b5050600054610100900460ff1692915050565b6040519015158152602001610061565b6000602082840312156100f457600080fd5b8135801515811461010457600080fd5b9392505050565b60008083601f84011261011d57600080fd5b50813567ffffffffffffffff81111561013557600080fd5b60208301915083602082850101111561014d57600080fd5b9250929050565b6000806000806040858703121561016a57600080fd5b843567ffffffffffffffff8082111561018257600080fd5b61018e8883890161010b565b909650945060208701359150808211156101a757600080fd5b506101b48782880161010b565b9598949750955050505056fea26469706673582212200d1c4c1a9398fe6538ce819cb3cd28a0a7dbf7f311c5f775bd7b16473af4a31e64736f6c6343000813003360806040526000805534801561001457600080fd5b50610362806100246000396000f3fe6080604052600436106100705760003560e01c8063ddca3f431161004e578063ddca3f43146100e3578063e445e7dd146100f9578063e5320bb914610115578063f667ee911461014857600080fd5b8063086011b91461007557806369fe0e2d1461008a578063aaccd230146100aa575b600080fd5b610088610083366004610265565b610178565b005b34801561009657600080fd5b506100886100a53660046102d1565b600055565b3480156100b657600080fd5b506100d06100c5366004610265565b505060005492915050565b6040519081526020015b60405180910390f35b3480156100ef57600080fd5b506100d060005481565b34801561010557600080fd5b50604051600081526020016100da565b34801561012157600080fd5b506101386101303660046102ea565b600192915050565b60405190151581526020016100da565b34801561015457600080fd5b506101386101633660046102d1565b60016020526000908152604090205460ff1681565b6101848484848461018a565b50505050565b60018060006101ce85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061021192505050565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905550505050565b805160209091012090565b60008083601f84011261022e57600080fd5b50813567ffffffffffffffff81111561024657600080fd5b60208301915083602082850101111561025e57600080fd5b9250929050565b6000806000806040858703121561027b57600080fd5b843567ffffffffffffffff8082111561029357600080fd5b61029f8883890161021c565b909650945060208701359150808211156102b857600080fd5b506102c58782880161021c565b95989497509550505050565b6000602082840312156102e357600080fd5b5035919050565b600080602083850312156102fd57600080fd5b823567ffffffffffffffff81111561031457600080fd5b6103208582860161021c565b9096909550935050505056fea2646970667358221220d597660da47b708ebc4124d78182bac56415531b3bb59c7c24ff07fb5a25f33764736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "DefaultHookSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "module";
            readonly type: "address";
        }];
        readonly name: "DefaultIsmSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "destination";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "Dispatch";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "messageId";
            readonly type: "bytes32";
        }];
        readonly name: "DispatchId";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "origin";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "sender";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }];
        readonly name: "Process";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "messageId";
            readonly type: "bytes32";
        }];
        readonly name: "ProcessId";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "RequiredHookSet";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "VERSION";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "addInboundMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }, {
            readonly internalType: "contract MockMailbox";
            readonly name: "_mailbox";
            readonly type: "address";
        }];
        readonly name: "addRemoteMailbox";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "defaultHook";
        readonly outputs: readonly [{
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "defaultIsm";
        readonly outputs: readonly [{
            readonly internalType: "contract IInterchainSecurityModule";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_id";
            readonly type: "bytes32";
        }];
        readonly name: "delivered";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deployedBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "dispatch";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "hookMetadata";
            readonly type: "bytes";
        }];
        readonly name: "dispatch";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_messageBody";
            readonly type: "bytes";
        }];
        readonly name: "dispatch";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "inboundMessages";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "inboundProcessedNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "inboundUnprocessedNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_defaultIsm";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_defaultHook";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_requiredHook";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "latestDispatchedId";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "localDomain";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "nonce";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "process";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "processNextInboundMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_id";
            readonly type: "bytes32";
        }];
        readonly name: "processedAt";
        readonly outputs: readonly [{
            readonly internalType: "uint48";
            readonly name: "";
            readonly type: "uint48";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_id";
            readonly type: "bytes32";
        }];
        readonly name: "processor";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "quoteDispatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }];
        readonly name: "quoteDispatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "defaultHookMetadata";
            readonly type: "bytes";
        }];
        readonly name: "quoteDispatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }];
        readonly name: "recipientIsm";
        readonly outputs: readonly [{
            readonly internalType: "contract IInterchainSecurityModule";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "remoteMailboxes";
        readonly outputs: readonly [{
            readonly internalType: "contract MockMailbox";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "requiredHook";
        readonly outputs: readonly [{
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "setDefaultHook";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_module";
            readonly type: "address";
        }];
        readonly name: "setDefaultIsm";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "setRequiredHook";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MockMailboxInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockMailbox;
}
export {};
//# sourceMappingURL=MockMailbox__factory.d.ts.map